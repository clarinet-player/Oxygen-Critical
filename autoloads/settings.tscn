[gd_scene load_steps=2 format=3 uid="uid://o08p2kot83ge"]

[sub_resource type="GDScript" id="GDScript_wdita"]
script/source = "extends Node



signal settings_changed


var fov := 75.0
var mouse_sensitivity := 1.0
var jump_angle := 0.0
var volume := 75

var saved_inventory := [1, 5, 4]
var username := \"\"

var shadows_enabled := true
var volumetrics_enabled := true
var particles_enabled := true



func _ready():
	read_file()
	if !volume:
		AudioServer.set_bus_mute(0, true)
	else:
		AudioServer.set_bus_mute(0, false)
		AudioServer.set_bus_volume_db(0, -sqrt(100 - volume) * 2)
	



func read_file():
	if not FileAccess.file_exists(\"user://usersettings.json\"):
		write_file()
		return
	
	var file = FileAccess.open(\"user://usersettings.json\", FileAccess.READ)
	var string = file.get_line()
	var json = JSON.new()
	file.close()
	
	if json.parse(string) != OK:
		write_file()
		return
	
	var data : Dictionary = json.get_data()
	if data.has(\"fov\"):
		fov = data[\"fov\"]
	if data.has(\"mouse_sensitivity\"):
		mouse_sensitivity = data[\"mouse_sensitivity\"]
	if data.has(\"jump_angle\"):
		jump_angle = data[\"jump_angle\"]
	if data.has(\"volume\"):
		volume = data[\"volume\"]
	if data.has(\"saved_inventory\"):
		saved_inventory = data[\"saved_inventory\"]
	if data.has(\"shadows_enabled\"):
		shadows_enabled = data[\"shadows_enabled\"]
	if data.has(\"volumetrics_enabled\"):
		volumetrics_enabled = data[\"volumetrics_enabled\"]
	if data.has(\"particles_enabled\"):
		particles_enabled = data[\"particles_enabled\"]
	if data.has(\"username\"):
		username = data[\"username\"]



func write_file():
	var file = FileAccess.open(\"user://usersettings.json\", FileAccess.WRITE)
	var data = {
		\"fov\": fov,
		\"mouse_sensitivity\": mouse_sensitivity,
		\"jump_angle\": jump_angle,
		\"volume\": volume,
		\"saved_inventory\": saved_inventory,
		\"shadows_enabled\": shadows_enabled,
		\"volumetrics_enabled\": volumetrics_enabled,
		\"particles_enabled\": particles_enabled,
		\"username\": username
	}
	file.store_line(JSON.stringify(data))
	file.close()



func on_changed():
	settings_changed.emit()
	if !volume:
		AudioServer.set_bus_mute(0, true)
	else:
		AudioServer.set_bus_mute(0, false)
		AudioServer.set_bus_volume_db(0, -sqrt(100 - volume) * 2)
"

[node name="Settings" type="Node"]
script = SubResource("GDScript_wdita")
